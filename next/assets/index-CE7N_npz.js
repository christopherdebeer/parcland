(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(n){if(n.ep)return;n.ep=!0;const a=e(n);fetch(n.href,a)}})();class w{constructor(t={},e=null){this.canvasState=t,this.parentStateManager=e,this.childCanvasElements=new Map,this.canvasState.elements||(this.canvasState.elements=[]),this.canvasState.edges||(this.canvasState.edges=[]),this.canvasState.versionHistory||(this.canvasState.versionHistory=[]),this.selectedElementId=null,this.activeGesture=null,this.mode="navigate",this.elementNodesMap={},this.edgeNodesMap={},this.edgeLabelNodesMap={},this.viewState={scale:1,translateX:0,translateY:0},this.saveTimeout=null,this.debounceSaveDelay=500,this.tokenKey="PARC.LAND/BKPK_TOKEN",this.listeners=new Map,this.controller=null,this.setupHandleNotifications()}setupHandleNotifications(){this.notifyResizeHandlePointerDown=()=>{},this.notifyScaleHandlePointerDown=()=>{},this.notifyReorderHandlePointerDown=()=>{},this.notifyTypeHandlePointerDown=()=>{},this.notifyRotateHandlePointerDown=()=>{},this.notifyEdgeHandlePointerDown=()=>{}}setController(t){this.controller=t}getController(){return this.controller}subscribe(t,e){return this.listeners.has(t)||this.listeners.set(t,[]),this.listeners.get(t).push(e),()=>{const s=this.listeners.get(t);if(!s)return;const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}notify(t,e){if(!this.listeners.has(t))return;[...this.listeners.get(t)].forEach(n=>{try{n(e)}catch(a){console.error(`Error in ${t} listener:`,a)}})}get elements(){return this.canvasState.elements||[]}get edges(){return this.canvasState.edges||[]}findElementById(t){return t?this.elements.find(e=>e.id===t):null}findEdgeElementById(t){return t?this.edges.find(e=>e.id===t):null}findElementOrEdgeById(t){return this.findElementById(t)||this.findEdgeElementById(t)}findEdgesByElementId(t){return t?this.edges.filter(e=>e.source===t||e.target===t):[]}registerChildCanvas(t,e){this.childCanvasElements.set(t,e),this.notify("child-canvas-registered",{elementId:t,childCanvasId:e})}getChildCanvasState(t){const e=this.childCanvasElements.get(t);return e?{canvasId:e,sourceElementId:t,elements:[],edges:[]}:null}addElement(t){return t.id||(t.id="el-"+Date.now()),this.canvasState.elements.push(t),this.notify("element-added",t),t.id}updateElement(t,e){const s=this.findElementById(t);return s?(Object.assign(s,e),this.notify("element-updated",{id:t,element:s}),!0):!1}removeElementById(t){if(!t)return!1;const e=this.canvasState.elements.length;return this.canvasState.elements=this.canvasState.elements.filter(s=>s.id!==t),e!==this.canvasState.elements.length?(this.elementNodesMap[t]&&(this.elementNodesMap[t].remove(),delete this.elementNodesMap[t]),this.findEdgesByElementId(t).forEach(n=>{this.removeEdgeById(n.id)}),this.childCanvasElements.has(t)&&this.childCanvasElements.delete(t),this.notify("element-removed",t),this.selectedElementId===t&&this.clearSelection(),!0):!1}addEdge(t){return t.id||(t.id="edge-"+Date.now()),this.canvasState.edges.push(t),this.notify("edge-added",t),t.id}updateEdge(t,e){const s=this.findEdgeElementById(t);return s?(Object.assign(s,e),this.notify("edge-updated",{id:t,edge:s}),!0):!1}removeEdgeById(t){if(!t)return!1;const e=this.canvasState.edges.length;return this.canvasState.edges=this.canvasState.edges.filter(s=>s.id!==t),e!==this.canvasState.edges.length?(this.edgeNodesMap[t]&&(this.edgeNodesMap[t].remove(),delete this.edgeNodesMap[t]),this.edgeLabelNodesMap&&this.edgeLabelNodesMap[t]&&(this.edgeLabelNodesMap[t].remove(),delete this.edgeLabelNodesMap[t]),this.notify("edge-removed",t),this.selectedElementId===t&&this.clearSelection(),!0):!1}selectElement(t){this.selectedElementId!==t&&(this.selectedElementId=t,this.notify("selection-changed",t))}clearSelection(){this.selectedElementId&&(this.selectedElementId=null,this.notify("selection-changed",null))}setActiveGesture(t){this.activeGesture!==t&&(this.activeGesture=t,this.notify("gesture-changed",t))}clearActiveGesture(){this.activeGesture&&(this.activeGesture=null,this.notify("gesture-changed",null))}setViewState(t){const e={...this.viewState};Object.assign(this.viewState,t),JSON.stringify(e)!==JSON.stringify(this.viewState)&&this.notify("view-state-changed",this.viewState)}requestDrillIn(t){t.parentContext={elementId:t.sourceElementId,canvasId:this.canvasState.canvasId},this.notify("drill-in-requested",t)}serializeCanvas(){return JSON.stringify(this.canvasState)}saveCanvas(){clearTimeout(this.saveTimeout),this.saveTimeout=setTimeout(()=>{this._saveCanvas()},this.debounceSaveDelay),this.saveCanvasLocalOnly()}async _saveCanvas(){this.saveCanvasLocalOnly();const t=this.getAuthToken();if(!t){console.warn("No auth token found, skipping API save");return}const e=this.canvasState.canvasId,s="websim";try{const a=await(await fetch(`https://c15r-parcland_backpack.web.val.run/${s}/${e}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:this.serializeCanvas()})).json();console.log(`Canvas ${e} saved to API`,a),this.notify("canvas-saved",{remote:!0,success:!0})}catch(n){console.error(`Error saving canvas ${e} to API:`,n),this.notify("canvas-saved",{remote:!0,success:!1,error:n})}}saveCanvasLocalOnly(){try{localStorage.setItem("myCanvasData_"+this.canvasState.canvasId,this.serializeCanvas()),this.notify("canvas-saved",{remote:!1,success:!0})}catch(t){console.error("Error saving to local storage:",t),this.notify("canvas-saved",{remote:!1,success:!1,error:t})}}async setBackpackItem(t,e){const s=this.getAuthToken();if(!s){console.warn("No auth token found, skipping API save");return}try{const a=await(await fetch(`https://c15r-parcland_backpack.web.val.run/parc.land/${t}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:e})).json();return console.log(`Backpack item ${t} saved to API`,a),a}catch(n){throw console.error(`Error saving backpack item ${t} to API:`,n),n}}async getBackpackItem(t){const e=this.getAuthToken();if(!e)return console.warn("No auth token found, skipping API get"),null;try{const s=await fetch(`https://c15r-parcland_backpack.web.val.run/parc.land/${t}`,{headers:{Authorization:`Bearer ${e}`}});if(!s.ok)throw new Error(`Failed to fetch item: ${s.status}`);return await s.json()}catch(s){return console.error(`Error getting backpack item ${t} from API:`,s),null}}async loadCanvas(t){const e=this.tokenKey;let s=localStorage.getItem(e);s||(localStorage.setItem(e,"TBC"),s="TBC");const n=localStorage.getItem("myCanvasData_"+t);try{const i=await fetch(`https://c15r-parcland_backpack.web.val.run/websim/${t}`,{headers:{Authorization:`Bearer ${s}`}});if(i.ok){const r=await i.json();return this.canvasState=r,this.notify("canvas-loaded",{remote:!0,success:!0}),r}else if(console.warn("Failed to load from API, fallback local"),n)try{const r=JSON.parse(n);return this.canvasState=r,this.notify("canvas-loaded",{remote:!1,success:!0}),r}catch(r){console.error("Error parsing local storage data:",r);const o={canvasId:t,elements:[],edges:[],versionHistory:[]};return this.canvasState=o,this.notify("canvas-loaded",{remote:!1,success:!1,error:r}),o}else{const r={canvasId:t,elements:[],edges:[],versionHistory:[]};return this.canvasState=r,this.notify("canvas-loaded",{remote:!1,success:!1,error:new Error("No local data found")}),r}}catch(a){if(console.error("Error loading from API",a),n)try{const i=JSON.parse(n);return this.canvasState=i,this.notify("canvas-loaded",{remote:!1,success:!0}),i}catch(i){console.error("Error parsing local storage data:",i);const r={canvasId:t,elements:[],edges:[],versionHistory:[]};return this.canvasState=r,this.notify("canvas-loaded",{remote:!1,success:!1,error:i}),r}else{const i={canvasId:t,elements:[],edges:[],versionHistory:[]};return this.canvasState=i,this.notify("canvas-loaded",{remote:!1,success:!1,error:a}),i}}}getAuthToken(){const t=this.tokenKey;let e=localStorage.getItem(t);return e||(localStorage.setItem(t,"TBC"),e="TBC"),e}async generateContent(t,e){const{type:s,id:n}=e,a=this.findEdgesByElementId(n).filter(r=>r.target===n).map(r=>({label:r.label,el:this.findElementById(r.source)}));console.log("Relevant edges",a);const i=this.getAuthToken();if(!i||i==="TBC")return await this.generateContentOld(t,s);try{const r=await fetch("https://c15r--2ac72f16e02411efa75ee6cdfca9ef9f.web.val.run",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${i}`},body:JSON.stringify({model:"claude-3-5-sonnet-20241022",max_tokens:4096,messages:[{role:"user",content:[{type:"text",text:`You will be given an element which is rendered into visual canvas. Either follow the user request or improve the provided content. The element content type should be <type>${s}</type>.

  Please provide your response in two parts:
  1. Your thought process about how to handle this request
  2. The actual result/content

  Here is the user request or content to process:

  <related-context>
  ${a.map(l=>{var c;return`<relation><label>${l.label||"undefined"}</label><content>${((c=l.el)==null?void 0:c.content)||""}</content></relation>`}).join(`
`)}
  </related-context>

  <current-content>
  ${t}
  </current-content>

  Respond only with valid json (do not wrap in code block) following the ApiResponse schema:

  <schema>
  interface ApiResponse {
    thoughts: string;
    result: string;
  }
  </schema>
  `}]}]})});console.log("response.ok",r.ok);const o=await r.text();console.log("AI response:",o);try{const l=JSON.parse(o);return this.notify("content-generated",{success:!0,elementId:n}),l.result}catch(l){return console.error("Failed to parse json response",l),this.notify("content-generated",{success:!1,error:l,elementId:n}),null}}catch(r){return console.error("Error fetching AI response:",r),this.notify("content-generated",{success:!1,error:r,elementId:n}),null}}async generateContentOld(t,e){try{const n=await(await fetch("/api/ai_completion",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({instructions:`You will be given an element which is rendered into a visual canvas.
  Either follow the user request or improve the provided content.
  The element content type should be <content-type>${e}</content-type>.

  Response should be valid JSON conforming to response schema:

  <schema>
  interface Response {
    thinking: string;
    result: string;
  }
  </schema>

  <user_request_or_content>
  ${t}
  </user_request_or_content>`})})).json();return this.notify("content-generated",{success:!0,legacy:!0}),n.result}catch(s){return console.error("Error fetching AI response (old fallback):",s),this.notify("content-generated",{success:!1,error:s,legacy:!0}),null}}async regenerateImage(t){try{const s=await(await fetch("https://c15r-replicate_base.web.val.run/generate",{method:"POST",headers:{Authorization:`Bearer ${this.getAuthToken()}`},body:JSON.stringify({prompt:t.content,width:t.width,height:t.height})})).json();return s&&s.imageUrl?(this.updateElement(t.id,{src:s.imageUrl}),this.saveCanvasLocalOnly(),this.notify("image-regenerated",{success:!0,elementId:t.id}),!0):(this.notify("image-regenerated",{success:!1,error:new Error("No image URL returned"),elementId:t.id}),!1)}catch(e){return console.error("Failed to regenerate image",e),this.notify("image-regenerated",{success:!1,error:e,elementId:t.id}),!1}}addVersionHistoryEntry(t="Canvas updated"){const e={timestamp:Date.now(),description:t,state:JSON.stringify(this.canvasState)};this.canvasState.versionHistory.push(e),this.canvasState.versionHistory.length>50&&(this.canvasState.versionHistory=this.canvasState.versionHistory.slice(-50)),this.notify("version-added",e)}restoreFromVersion(t){if(!this.canvasState.versionHistory||t<0||t>=this.canvasState.versionHistory.length)return!1;try{const e=this.canvasState.versionHistory[t],s=JSON.parse(e.state);return this.addVersionHistoryEntry("Before restore"),this.canvasState.elements=s.elements,this.canvasState.edges=s.edges,s.versionHistory=this.canvasState.versionHistory,s.canvasId=this.canvasState.canvasId,this.canvasState=s,this.notify("version-restored",{index:t,timestamp:e.timestamp}),!0}catch(e){return console.error("Error restoring from version:",e),!1}}getCanvasState(){return JSON.parse(JSON.stringify(this.canvasState))}destroy(){clearTimeout(this.saveTimeout),this.listeners.clear(),this.controller=null,this.parentStateManager=null,this.childCanvasElements.clear()}}class C{constructor(t,e){this.state=t,this.container=e.container,this.edgesLayer=e.edgesLayer,this.canvas=e.canvas,this.MAX_SCALE=10,this.MIN_SCALE=.1,this.stateSubscriptions=[this.state.subscribe("view-state-changed",()=>{this.updateCanvasTransform()})],this.loadLocalViewState()}loadLocalViewState(){try{const e="canvasViewState_"+(this.state.canvasState.canvasId||"default"),s=localStorage.getItem(e);if(s){const n=JSON.parse(s);this.state.setViewState({scale:n.scale||1,translateX:n.translateX||0,translateY:n.translateY||0})}}catch(t){console.warn("No local viewState found",t)}}saveLocalViewState(){try{const e="canvasViewState_"+(this.state.canvasState.canvasId||"default");localStorage.setItem(e,JSON.stringify(this.state.viewState))}catch(t){console.warn("Could not store local viewState",t)}}setInitialTransform({x:t,y:e,scale:s}){this.state.setViewState({translateX:t,translateY:e,scale:s}),this.updateCanvasTransform(),this.saveLocalViewState()}parentToChildCoordinates(t,e){var n;const s=(n=this.state.parentStateManager)==null?void 0:n.viewState;return s?{x:(t-s.translateX)/s.scale,y:(e-s.translateY)/s.scale}:{x:t,y:e}}childToParentCoordinates(t,e){var n;const s=(n=this.state.parentStateManager)==null?void 0:n.viewState;return s?{x:t*s.scale+s.translateX,y:e*s.scale+s.translateY}:{x:t,y:e}}updateCanvasTransform(){const{viewState:t}=this.state;this.container.style.transform=`translate(${t.translateX}px, ${t.translateY}px) scale(${t.scale})`,this.container.style.setProperty("--translateX",t.translateX),this.container.style.setProperty("--translateY",t.translateY),this.container.style.setProperty("--zoom",t.scale);const e=this.canvas.getBoundingClientRect(),s=e.width,n=e.height,a=-t.translateX/t.scale,i=-t.translateY/t.scale,r=s/t.scale,o=n/t.scale;this.edgesLayer.setAttribute("viewBox",`${a} ${i} ${r} ${o}`)}screenToCanvas(t,e){const{viewState:s}=this.state,n=this.canvas.getBoundingClientRect(),a=t-n.left,i=e-n.top,r={x:(a-s.translateX)/s.scale,y:(i-s.translateY)/s.scale};return this.state.parentStateManager?this.parentToChildCoordinates(r.x,r.y):r}canvasToScreen(t,e){const{viewState:s}=this.state,n=this.canvas.getBoundingClientRect();let a={x:t,y:e};return this.state.parentStateManager&&(a=this.childToParentCoordinates(t,e)),{x:a.x*s.scale+s.translateX+n.left,y:a.y*s.scale+s.translateY+n.top}}panCanvas(t,e){const{viewState:s}=this.state;this.state.setViewState({translateX:s.translateX+t,translateY:s.translateY+e}),this.saveLocalViewState()}zoomCanvas(t,e){const{viewState:s}=this.state,n=s.scale;t=Math.min(Math.max(t,this.MIN_SCALE),this.MAX_SCALE);const a=t-n;this.state.setViewState({scale:t,translateX:s.translateX-e.x*a,translateY:s.translateY-e.y*a}),this.saveLocalViewState()}handleWheelZoom(t){if(t.target.closest(".content")){const r=t.target.closest(".content");if(r.clientHeight!==r.scrollHeight)return}const e=-t.deltaY,a=this.state.viewState.scale*(1+e*.001),i=this.screenToCanvas(t.clientX,t.clientY);this.zoomCanvas(a,i)}handlePinchZoom(t,e,s){const n=Math.min(Math.max(t*e,this.MIN_SCALE),this.MAX_SCALE);this.zoomCanvas(n,s)}startCanvasPan(t,e){const{viewState:s}=this.state;return{initialTranslateX:s.translateX,initialTranslateY:s.translateY,startX:t,startY:e}}updateCanvasPan(t,e,s){const n=e-t.startX,a=s-t.startY;this.state.setViewState({translateX:t.initialTranslateX+n,translateY:t.initialTranslateY+a})}finishCanvasPan(){this.saveLocalViewState()}startCanvasPinch(t,e){const{viewState:s}=this.state,n=Math.hypot(e.x-t.x,e.y-t.y),a=(t.x+e.x)/2,i=(t.y+e.y)/2,r=this.screenToCanvas(a,i);return{initialScale:s.scale,initialDistance:n,pinchCenterScreen:{x:a,y:i},pinchCenterCanvas:r}}updateCanvasPinch(t,e,s){const n=Math.hypot(s.x-e.x,s.y-e.y);if(t.initialDistance===0)return;const a=n/t.initialDistance;this.handlePinchZoom(t.initialScale,a,t.pinchCenterCanvas)}setCanvasView(t,e,s){this.state.setViewState({scale:t,translateX:e,translateY:s}),this.saveLocalViewState()}resetCanvasView(){this.setCanvasView(1,0,0)}focusOnElement(t){const e=this.state.findElementById(t);if(!e)return;const s=this.canvas.getBoundingClientRect(),n=s.width/2,a=s.height/2;let i={x:e.x,y:e.y};this.state.parentStateManager&&(i=this.childToParentCoordinates(e.x,e.y)),this.state.setViewState({translateX:n-i.x*this.state.viewState.scale,translateY:a-i.y*this.state.viewState.scale}),this.saveLocalViewState()}handleResize(){this.updateCanvasTransform()}destroy(){this.stateSubscriptions.forEach(t=>t()),this.stateSubscriptions=[]}}class M{constructor(t,e,s={}){this.state=t,this.container=e.container,this.staticContainer=e.staticContainer,this.edgeManager=s.edgeManager,this.viewManager=s.viewManager,this.stateSubscriptions=[this.state.subscribe("element-updated",n=>{this.updateElementNodeById(n.id,n.element)}),this.state.subscribe("selection-changed",n=>{this.refreshAllElements()})]}createElementNode(t){const e=document.createElement("div");return e.classList.add("canvas-element"),e.dataset.elId=t.id,e}updateElementNode(t,e,s){this.applyPositionStyles(t,e),t.setAttribute("type",e.type),t.classList.remove("selected"),s&&t.classList.add("selected"),this.setElementContent(t,e),Array.from(t.querySelectorAll(".element-handle")).forEach(a=>a.remove()),s&&this.buildHandles(t,e)}updateElementNodeById(t,e){const s=this.state.elementNodesMap[t];if(s){const n=t===this.state.selectedElementId;this.updateElementNode(s,e,n)}}setElementContent(t,e){const s=t.dataset.type||"",n=t.dataset.content||"",a=t.dataset.src||"",i=e.src||"";if(s===e.type&&n===e.content&&a===i)return;console.log("Setting element content",e.id,e.type),t.dataset.type=e.type,t.dataset.content=e.content,t.dataset.src=i,t.innerHTML="",e.type==="text"?this.renderTextElement(t,e):e.type==="html"?this.renderHtmlElement(t,e):e.type==="markdown"?this.renderMarkdownElement(t,e):e.type==="img"?this.renderImageElement(t,e):e.type==="canvas-container"?this.renderCanvasContainerElement(t,e):e.type==="edit-prompt"&&this.renderEditPromptElement(t,e);const r=t.querySelector(".content");r&&(r.clientHeight<r.scrollHeight?r.classList.add("scroller"):r.classList.remove("scroller"))}renderTextElement(t,e){const s=document.createElement("p");s.classList.add("content"),s.textContent=e.content,s.style.color=e.color||"#000000",t.appendChild(s)}renderHtmlElement(t,e){const s=document.createElement("div");s.classList.add("content"),s.innerHTML=e.content,t.appendChild(s),this.executeScriptElements(e,s)}renderMarkdownElement(t,e){const s=document.createElement("div");s.classList.add("content"),s.innerHTML=marked.parse(e.content),s.style.color=e.color||"#000000",t.appendChild(s)}renderImageElement(t,e){const s=document.createElement("img");s.classList.add("content"),s.dataset.image_id=e.imgId||"",s.title=e.content,s.onerror=n=>{console.warn("Image failed to load",n)},!e.src&&!s.src&&this.requestImageRegeneration(e),s.src=e.src||`https://placehold.co/${Math.round(e.width)}x${Math.round(e.height)}?text=${encodeURIComponent(e.content)}&font=lora`,t.appendChild(s)}renderCanvasContainerElement(t,e){const s=document.createElement("div");s.classList.add("content"),s.classList.add("child-canvas-container"),s.style.position="relative",s.style.display="flex",s.style.flexDirection="column",s.style.alignItems="center",s.style.justifyContent="center",s.style.width="100%",s.style.height="100%",s.style.border="2px dashed #aaa",s.style.borderRadius="8px",s.style.backgroundColor="rgba(240, 240, 240, 0.5)",s.style.backdropFilter="blur(2px)";const n=document.createElement("div");if(n.style.flex="1",n.style.width="100%",n.style.position="relative",n.style.overflow="hidden",e.childCanvasState&&e.childCanvasState.elements&&e.childCanvasState.elements.length>0){const i=e.childCanvasState.elements.length,r=(e.childCanvasState.edges||[]).length;n.innerHTML=`
                <div style='font-size:0.9em; color: #666; text-align: center; padding: 10px;'>
                    <i class="fa-solid fa-diagram-project"></i>
                    <div>Child Canvas</div>
                    <div style='font-size:0.8em; color: #888;'>
                        ${i} element${i!==1?"s":""},
                        ${r} edge${r!==1?"s":""}
                    </div>
                </div>
            `}else n.innerHTML=`
                <div style='font-size:0.9em; color: #888; text-align: center; padding: 10px;'>
                    <i class="fa-solid fa-square-plus"></i>
                    <div>Empty Child Canvas</div>
                    <div style='font-size:0.8em;'>Click to add content</div>
                </div>
            `;const a=document.createElement("button");a.className="drill-in-button",a.innerHTML='<i class="fa-solid fa-arrow-down"></i> Drill In',a.onclick=i=>{i.stopPropagation();const r=e.childCanvasState||{canvasId:e.id+"_child",elements:[],edges:[]};this.state.requestDrillIn(r)},s.appendChild(a),t.appendChild(s)}renderEditPromptElement(t,e){const s=document.createElement("div");s.classList.add("content"),t.appendChild(s),t.editor||(t.editor=CodeMirror(s,{value:e.content||"",lineNumbers:!1,mode:"text",theme:"default",lineWrapping:!0,viewportMargin:1/0}));const n=document.createElement("div");n.classList.add("actions"),t.appendChild(n);const a=document.createElement("button");a.textContent="Save";const i=document.createElement("button");i.textContent="Delete";const r=document.createElement("button");r.textContent="Cancel",n.appendChild(r),n.appendChild(a),n.appendChild(i),i.onclick=()=>{console.log("edit-prompt delete target"),this.handleEditPromptDelete(e)},a.onclick=()=>{this.handleEditPromptSave(t,e)},r.onclick=()=>{this.handleEditPromptCancel(e)}}handleEditPromptDelete(t){const e=this.state.findElementOrEdgeById(t.target);this.state.removeElementById(e==null?void 0:e.id),this.state.removeEdgeById(e==null?void 0:e.id),this.state.removeElementById(t.id),this.refreshAllElements(),this.state.saveCanvas()}handleEditPromptSave(t,e){const s=t.editor.getValue(),n=this.state.findElementOrEdgeById(e.target);n&&(console.log(`[DEBUG] Saving edit prompt content to [${n.id}] as property [${e.property}]. with value: "${s}"`,n,e),n&&(n[e.property]=s,this.edgeManager&&this.edgeManager.renderEdges(),this.state.saveCanvas())),this.state.removeElementById(e.id),this.refreshAllElements()}handleEditPromptCancel(t){this.state.removeElementById(t.id),this.refreshAllElements(),this.state.saveCanvas()}executeScriptElements(t,e){const s=Array.from(e.querySelectorAll("script")),n=a=>(console.log("Loading script",a),new Promise((i,r)=>{a.onload=()=>i(),a.onerror=()=>r(new Error(`Failed to load script: ${a.src}`)),document.head.appendChild(a)}));for(const a of s)if(console.log("Encountered script",a),a.type!=="module"&&!a.getAttribute("src")&&a.textContent&&a.textContent.trim()){const i=a.textContent;new Function("element","controller","node",i)(t,this.state.getController(),e)}else n(a)}applyPositionStyles(t,e){const s=e.scale||1,n=e.rotation||0,a=Math.floor(e.zIndex)||1,i=e.blendMode||"normal";e.static?(t.style.position="fixed",t.style.left=(e.fixedLeft||0)+"%",t.style.top=(e.fixedTop||0)+"%",t.style.width=e.width*s+"px",t.style.height=e.height*s+"px",t.style.setProperty("--scale",a),t.style.setProperty("--scale",s),t.style.setProperty("--width",e.width*s+"px"),t.style.setProperty("--height",e.height*s+"px"),t.style.setProperty("--blend-mode",i),t.style.transform=`rotate(${n}deg) translate(calc(0px - var(--padding)), calc(0px - var(--padding)))`):(t.style.position="absolute",t.style.left=e.x-e.width*s/2+"px",t.style.top=e.y-e.height*s/2+"px",t.style.width=e.width*s+"px",t.style.height=e.height*s+"px",t.style.setProperty("--scale",a),t.style.setProperty("--scale",s),t.style.setProperty("--width",e.width*s+"px"),t.style.setProperty("--height",e.height*s+"px"),t.style.setProperty("--blend-mode",i),t.style.transform=`rotate(${n}deg) translate(calc(0px - var(--padding)), calc(0px - var(--padding)))`),this.edgeManager&&(this.state.findEdgesByElementId(e.id)||[]).length>0&&this.edgeManager.renderEdges()}buildHandles(t,e){[{className:"type-handle element-handle",icon:"fa-solid fa-font",handler:o=>this.typeHandlePointerDown(o)},{className:"scale-handle element-handle top-right",icon:"fa-solid fa-up-down-left-right",handler:o=>this.scaleHandlePointerDown(o)},{className:"reorder-handle bottom-left element-handle",icon:"fa-solid fa-layer-group",handler:o=>this.reorderHandlePointerDown(o)},{className:"resize-handle bottom-right element-handle",icon:"fa-solid fa-up-right-and-down-left-from-center",handler:o=>this.resizeHandlePointerDown(o)}].forEach(o=>{const l=document.createElement("div");l.className=o.className;const c=document.createElement("i");c.className=o.icon,l.appendChild(c),l.addEventListener("pointerdown",o.handler.bind(this)),t.appendChild(l)});const n=document.createElement("div");n.className="rotate-handle rotate-handle-position element-handle";const a=document.createElement("i");a.className="fa-solid fa-rotate",n.appendChild(a),n.addEventListener("pointerdown",o=>this.rotateHandlePointerDown(o)),t.appendChild(n);const i=document.createElement("div");i.className="edge-handle element-handle";const r=document.createElement("i");r.className="fa-solid fa-link",i.appendChild(r),i.addEventListener("pointerdown",o=>this.edgeHandlePointerDown(o)),t.appendChild(i)}renderElements(){console.log("renderElements()");const{elementNodesMap:t}=this.state,e=new Set(Object.keys(t)),s=new Set;this.state.elements.forEach(n=>{s.add(n.id);let a=t[n.id];a||(a=this.createElementNode(n),n.static?this.staticContainer.appendChild(a):this.container.appendChild(a),t[n.id]=a);const i=n.id===this.state.selectedElementId;try{this.updateElementNode(a,n,i)}catch(r){console.warn("[WARN] Error updating node",r,a,n)}}),e.forEach(n=>{s.has(n)||(t[n].remove(),delete t[n])}),this.edgeManager&&this.edgeManager.renderEdges()}createNewElement(t,e,s="markdown",n="",a=!1,i={}){const r="el-"+Date.now(),o={text:"New Text",img:"Realistic tree on white background",html:"<div>Hello World</div>",markdown:`# New Markdown
Some **content** here...`};let l=a?"canvas-container":s,c=n||o[l]||"Untitled";const g=this.state.viewState.scale||1,d={...i,id:r,x:t,y:e,width:(a?200:120)/g,height:(a?150:40)/g,rotation:0,type:l,content:c,versions:[],static:!1,childCanvasState:a?{canvasId:r+"_child",elements:[],edges:[],versionHistory:[]}:null};return this.state.addElement(d),this.state.selectElement(r),this.renderElements(),this.state.saveCanvas(),r}toggleStatic(t){const e=this.state.elementNodesMap[t.id];if(e){if(t.static){const s=e.getBoundingClientRect(),n=this.viewManager.screenToCanvas(s.left+s.width/2,s.top+s.height/2);t.x=n.x-t.width*(t.scale||1)/2,t.y=n.y-t.height*(t.scale||1)/2,t.static=!1,this.container.appendChild(e)}else{const s=e.getBoundingClientRect(),n=s.top/window.innerHeight*100,a=s.left/window.innerWidth*100;t.fixedTop=n,t.fixedLeft=a,t.static=!0,this.staticContainer.appendChild(e)}this.state.updateElement(t.id,t)}}requestImageRegeneration(t){this.state.regenerateImage(t)}refreshAllElements(){this.renderElements()}typeHandlePointerDown(t){t.stopPropagation(),this.state.notifyTypeHandlePointerDown(t)}resizeHandlePointerDown(t){t.stopPropagation(),this.state.notifyResizeHandlePointerDown(t)}scaleHandlePointerDown(t){t.stopPropagation(),this.state.notifyScaleHandlePointerDown(t)}rotateHandlePointerDown(t){t.stopPropagation(),this.state.notifyRotateHandlePointerDown(t)}reorderHandlePointerDown(t){t.stopPropagation(),this.state.notifyReorderHandlePointerDown(t)}edgeHandlePointerDown(t){t.stopPropagation(),this.state.notifyEdgeHandlePointerDown(t)}destroy(){this.stateSubscriptions.forEach(t=>t()),this.stateSubscriptions=[]}}class S{constructor(t,e,s={}){this.state=t,this.edgesLayer=e.edgesLayer,this.viewManager=s.viewManager,this.elementManager=s.elementManager,this.tempEdgeElements=new Map,this.stateSubscriptions=[this.state.subscribe("edge-added",n=>{this.renderSingleEdge(n)}),this.state.subscribe("edge-updated",n=>{this.updateEdgeById(n.id,n.edge)}),this.state.subscribe("edge-removed",n=>{this.removeEdgeFromDOM(n)}),this.state.subscribe("element-updated",()=>{this.renderEdges()}),this.state.subscribe("view-state-changed",()=>{this.renderEdges()})]}setupArrowheadMarker(){let t=this.edgesLayer.querySelector("defs");if(t||(t=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.edgesLayer.prepend(t)),!t.querySelector("#arrowhead")){const e=document.createElementNS("http://www.w3.org/2000/svg","marker");e.setAttribute("id","arrowhead"),e.setAttribute("markerWidth","10"),e.setAttribute("markerHeight","7"),e.setAttribute("refX","10"),e.setAttribute("refY","3.5"),e.setAttribute("orient","auto");const s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("d","M0,0 L0,7 L10,3.5 Z"),s.setAttribute("fill","#ccc"),e.appendChild(s),t.appendChild(e)}}renderEdges(){console.log("renderEdges()"),this.setupArrowheadMarker(),this.state.edges.forEach(t=>{this.renderSingleEdge(t)}),this.cleanupOrphanedEdges()}renderSingleEdge(t){var n,a;const{edgeNodesMap:e}=this.state;let s=e[t.id];s||(s=document.createElementNS("http://www.w3.org/2000/svg","line"),s.setAttribute("stroke",((n=t.style)==null?void 0:n.color)||"#ccc"),s.setAttribute("stroke-width",((a=t.style)==null?void 0:a.thickness)||"2"),s.setAttribute("marker-end","url(#arrowhead)"),e[t.id]=s,this.edgesLayer.appendChild(s)),this.updateEdgePosition(t,s)}updateEdgeById(t,e){var n,a,i,r;const s=this.state.edgeNodesMap[t];s&&(s.setAttribute("stroke",((n=e.style)==null?void 0:n.color)||"#ccc"),s.setAttribute("stroke-width",((a=e.style)==null?void 0:a.thickness)||"2"),s.setAttribute("stroke-dasharray",(i=e.data)!=null&&i.meta?"5,5":((r=e.style)==null?void 0:r.dash)||""),this.updateEdgePosition(e,s))}updateEdgePosition(t,e){var c,g;if(!e)return;const s=this.state.findElementById(t.source),n=this.state.findElementById(t.target),a=s?null:this.state.findEdgeElementById(t.source),i=n?null:this.state.findEdgeElementById(t.target),r=this.state.edgeLabelNodesMap||{};let o,l;if((s||a)&&(n||i)){if(s&&n)o=this.computeIntersection(s,n),l=this.computeIntersection(n,s);else if(s&&i){const d=r[t.target];d&&(o=this.computeIntersection(s,{x:parseFloat(d.getAttribute("x")),y:parseFloat(d.getAttribute("y"))}),l={x:parseFloat(d.getAttribute("x")),y:parseFloat(d.getAttribute("y"))})}else if(a&&n){const d=r[t.source];d&&(o={x:parseFloat(d.getAttribute("x")),y:parseFloat(d.getAttribute("y"))},l=this.computeIntersection(n,{x:parseFloat(d.getAttribute("x")),y:parseFloat(d.getAttribute("y"))}))}else if(a&&i){const d=r[t.source],m=r[t.target];d&&m&&(o={x:parseFloat(d.getAttribute("x")),y:parseFloat(d.getAttribute("y"))},l={x:parseFloat(m.getAttribute("x")),y:parseFloat(m.getAttribute("y"))})}o&&l?(e.setAttribute("x1",o.x),e.setAttribute("y1",o.y),e.setAttribute("x2",l.x),e.setAttribute("y2",l.y),e.setAttribute("stroke-dasharray",(c=t.data)!=null&&c.meta?"5,5":((g=t.style)==null?void 0:g.dash)||""),this.updateEdgeLabel(t,o,l)):(this.state.removeEdgeById(t.id),e.remove())}else this.state.removeEdgeById(t.id),e.remove()}updateEdgeLabel(t,e,s){this.state.edgeLabelNodesMap||(this.state.edgeLabelNodesMap={});const n=t.label?t.label:"Edge";let a=this.state.edgeLabelNodesMap[t.id];a||(a=document.createElementNS("http://www.w3.org/2000/svg","text"),a.setAttribute("text-anchor","middle"),a.setAttribute("data-id",t.id),a.setAttribute("alignment-baseline","middle"),a.setAttribute("fill","#000"),a.style.fontSize="12px",this.state.edgeLabelNodesMap[t.id]=a,this.edgesLayer.appendChild(a));const i=(e.x+s.x)/2,r=(e.y+s.y)/2;a.setAttribute("x",i),a.setAttribute("y",r),a.textContent=n,this.state.selectedElementId===t.id?a.style.fill="red":a.style.fill="#000"}computeIntersection(t,e){const s=t.x,n=t.y,a=t.scale||1,i=(t.width||10)*a,r=(t.height||10)*a;let o=e.x-s,l=e.y-n;if(o===0&&l===0)return{x:s,y:n};const c=i/2,g=r/2;let d=1/0,m=1/0;o!==0&&(d=c/Math.abs(o)),l!==0&&(m=g/Math.abs(l));const v=Math.min(d,m),f=s+o*v,E=n+l*v;return{x:f,y:E}}cleanupOrphanedEdges(){const{edgeNodesMap:t,edgeLabelNodesMap:e,edges:s}=this.state,n=new Set(s.map(a=>a.id));t&&Object.keys(t).forEach(a=>{n.has(a)||(console.log("[DEBUG] Deleting orphaned edge node",a,t[a]),t[a].remove(),delete t[a])}),e&&Object.keys(e).forEach(a=>{n.has(a)||(console.log("[DEBUG] Deleting orphaned edge label",a,e[a]),e[a].remove(),delete e[a])})}removeEdgeFromDOM(t){const{edgeNodesMap:e,edgeLabelNodesMap:s}=this.state;e&&e[t]&&(e[t].remove(),delete e[t]),s&&s[t]&&(s[t].remove(),delete s[t])}startEdgeCreation(t){console.log("Starting edge creation...");const e=this.state.findElementById(t);if(!e)return null;const s="temp-edge-"+Date.now(),n=document.createElementNS("http://www.w3.org/2000/svg","line");return n.setAttribute("stroke","blue"),n.setAttribute("stroke-width","4"),n.setAttribute("stroke-dasharray","5,5"),n.setAttribute("x1",e.x),n.setAttribute("y1",e.y),n.setAttribute("x2",e.x),n.setAttribute("y2",e.y),this.tempEdgeElements.set(s,{sourceId:t,lineElement:n}),this.edgesLayer.appendChild(n),s}updateEdgeCreation(t,e,s){const n=this.tempEdgeElements.get(t);n&&(n.lineElement.setAttribute("x2",e),n.lineElement.setAttribute("y2",s))}finishEdgeCreation(t,e){const s=this.tempEdgeElements.get(t);return!s||(s.lineElement.remove(),this.tempEdgeElements.delete(t),!e||e===s.sourceId)?null:this.createNewEdge(s.sourceId,e,"")}cancelEdgeCreation(t){const e=this.tempEdgeElements.get(t);e&&(e.lineElement.remove(),this.tempEdgeElements.delete(t))}createNewEdge(t,e,s,n={},a={}){const i="edge-"+Date.now(),r={id:i,source:t,target:e,label:s,style:{...a},data:{...n}};return this.state.addEdge(r),i}destroy(){this.tempEdgeElements.forEach(t=>{t.lineElement.remove()}),this.tempEdgeElements.clear(),this.stateSubscriptions.forEach(t=>t()),this.stateSubscriptions=[]}}class x{constructor(t,e,s={}){this.state=t,this.domElements=e,this.viewManager=s.viewManager,this.elementManager=s.elementManager,this.edgeManager=s.edgeManager,this.uiManager=s.uiManager,this.lastTapTime={},this.lastTapPosition={x:0,y:0},this.pointerDownHandlers=new Map,this.pointerMoveHandlers=new Map,this.pointerUpHandlers=new Map,this.activeGesture=null,this.initialTouches=[],this.tempEventHandlers=[],this.gestureData={dragStartPos:{x:0,y:0},elementStartPos:{x:0,y:0},elementStartSize:{width:0,height:0},elementStartRotation:0,centerForRotation:{x:0,y:0},initialPinchDistance:0,initialCanvasScale:1,pinchCenterScreen:{x:0,y:0},pinchCenterCanvas:{x:0,y:0},activeEdgeCreation:null,initialTranslateX:0,initialTranslateY:0,elementPinchStartSize:{width:0,height:0},elementPinchStartCenter:{x:0,y:0},pinchCenterStartCanvas:{x:0,y:0},addMenuTapPosX:0,addMenuTapPosY:0},this.edgePointerMoveHandler=null,this.edgePointerUpHandler=null,this.DOUBLE_TAP_THRESHOLD=300,this.TAP_MOVE_TOLERANCE=10,this.stateSubscriptions=[this.state.subscribe("gesture-changed",n=>{this.activeGesture=n})]}setupEventListeners(){const{canvas:t,container:e,staticContainer:s,edgesLayer:n,modeBtn:a,drillUpBtn:i,contextMenu:r}=this.domElements;t.addEventListener("pointerdown",this.onPointerDownCanvas.bind(this)),t.addEventListener("pointermove",this.onPointerMoveCanvas.bind(this)),t.addEventListener("pointerup",this.onPointerUpCanvas.bind(this)),t.addEventListener("pointercancel",this.onPointerUpCanvas.bind(this)),t.addEventListener("wheel",this.onWheelCanvas.bind(this)),e.addEventListener("pointerdown",this.onPointerDownElement.bind(this)),e.addEventListener("pointermove",this.onPointerMoveElement.bind(this)),e.addEventListener("pointerup",this.onPointerUpElement.bind(this)),e.addEventListener("pointercancel",this.onPointerUpElement.bind(this)),s.addEventListener("pointerdown",this.onPointerDownElement.bind(this)),s.addEventListener("pointermove",this.onPointerMoveElement.bind(this)),s.addEventListener("pointerup",this.onPointerUpElement.bind(this)),s.addEventListener("pointercancel",this.onPointerUpElement.bind(this)),n.addEventListener("pointerdown",this.blockPropagation.bind(this)),n.addEventListener("pointerup",this.onPointerUpEdgeLayer.bind(this)),r.addEventListener("pointerdown",o=>{console.log("contextMenu"),o.stopPropagation()}),a.onclick=o=>{o.stopPropagation();const l=this.state.getController(),c=this.state.mode==="direct"?"navigate":"direct";l.switchMode(c)},i&&(i.onclick=()=>{this.state.getController().drillUp()}),this.registerHandleEventHandlers(),window.addEventListener("resize",()=>{this.viewManager.handleResize()}),t.addEventListener("contextmenu",o=>(o.preventDefault(),!1))}registerHandleEventHandlers(){this.state.notifyResizeHandlePointerDown=t=>{this.handleResizeHandlePointerDown(t)},this.state.notifyScaleHandlePointerDown=t=>{this.handleScaleHandlePointerDown(t)},this.state.notifyReorderHandlePointerDown=t=>{this.handleReorderHandlePointerDown(t)},this.state.notifyTypeHandlePointerDown=t=>{this.handleTypeHandlePointerDown(t)},this.state.notifyRotateHandlePointerDown=t=>{this.handleRotateHandlePointerDown(t)},this.state.notifyEdgeHandlePointerDown=t=>{this.handleEdgeHandlePointerDown(t)}}blockPropagation(t){console.log("[DEBUG] Blocking event propagation on",t.target),t.stopPropagation()}onPointerDownCanvas(t){if(this.uiManager.hideContextMenu(),!t.target.closest(".canvas-element")&&this.state.selectedElementId&&this.state.clearSelection(),this.initialTouches.push({id:t.pointerId,x:t.clientX,y:t.clientY}),this.initialTouches.length===1&&!this.activeGesture)this.state.setActiveGesture("pan"),this.gestureData.initialTranslateX=this.state.viewState.translateX,this.gestureData.initialTranslateY=this.state.viewState.translateY,this.domElements.canvas.setPointerCapture(t.pointerId),this.gestureData.dragStartPos={x:t.clientX,y:t.clientY};else if(this.initialTouches.length===2){const e=this.initialTouches[0],s=this.initialTouches[1];if(this.gestureData.initialPinchDistance=Math.hypot(s.x-e.x,s.y-e.y),this.gestureData.pinchCenterScreen={x:(e.x+s.x)/2,y:(e.y+s.y)/2},this.gestureData.pinchCenterCanvas=this.viewManager.screenToCanvas(this.gestureData.pinchCenterScreen.x,this.gestureData.pinchCenterScreen.y),this.state.mode==="direct"&&this.state.selectedElementId){this.state.setActiveGesture("pinch-element");const n=this.state.findElementById(this.state.selectedElementId);n&&(this.gestureData.elementPinchStartSize={width:n.width,height:n.height},this.gestureData.elementPinchStartCenter={x:n.x,y:n.y},this.gestureData.pinchCenterStartCanvas={x:this.gestureData.pinchCenterCanvas.x,y:this.gestureData.pinchCenterCanvas.y})}else this.state.setActiveGesture("pinch-canvas"),this.gestureData.initialCanvasScale=this.state.viewState.scale}}onPointerMoveCanvas(t){if(this.activeGesture){if(this.activeGesture==="pan"&&this.initialTouches.length===1){const e=this.initialTouches[0];if(e.id===t.pointerId){const s=t.clientX-e.x,n=t.clientY-e.y;this.state.setViewState({translateX:this.gestureData.initialTranslateX+s,translateY:this.gestureData.initialTranslateY+n}),this.viewManager.saveLocalViewState()}}else if((this.activeGesture==="pinch-canvas"||this.activeGesture==="pinch-element")&&this.initialTouches.length===2){const e=this.initialTouches.findIndex(r=>r.id===t.pointerId);e!==-1&&(this.initialTouches[e].x=t.clientX,this.initialTouches[e].y=t.clientY);const[s,n]=this.initialTouches,a=Math.hypot(n.x-s.x,n.y-s.y);if(this.gestureData.initialPinchDistance===0)return;const i=a/this.gestureData.initialPinchDistance;if(this.activeGesture==="pinch-canvas")this.viewManager.handlePinchZoom(this.gestureData.initialCanvasScale,i,this.gestureData.pinchCenterCanvas);else{const r=this.state.findElementById(this.state.selectedElementId);if(r&&r.static!==!0){const o=this.gestureData.elementPinchStartCenter.x-this.gestureData.pinchCenterStartCanvas.x,l=this.gestureData.elementPinchStartCenter.y-this.gestureData.pinchCenterStartCanvas.y,c=o*i,g=l*i;this.state.updateElement(r.id,{x:this.gestureData.pinchCenterStartCanvas.x+c,y:this.gestureData.pinchCenterStartCanvas.y+g,width:this.gestureData.elementPinchStartSize.width*i,height:this.gestureData.elementPinchStartSize.height*i})}}}}}onPointerUpCanvas(t){if(!t.target.closest(".canvas-element")){if(this.activeGesture==="create-edge"){console.log("[DEBUG] Edge creation in progress exiting canvas pointer up handler");return}console.log("onPointerUpCanvas(ev)",t),this.onPointerUpDoubleTap(t,"canvas"),this.state.clearActiveGesture(),this.initialTouches=[],this.state.mode==="direct"&&this.state.getController().switchMode("navigate")}}onPointerUpDoubleTap(t,e,s){const n=Date.now(),a=t.clientX,i=t.clientY,r=this.lastTapTime[e]||0,o=n-r,l=Math.hypot(a-this.lastTapPosition.x,i-this.lastTapPosition.y);if(o<this.DOUBLE_TAP_THRESHOLD&&l<this.TAP_MOVE_TOLERANCE)if(console.log("[DEBUG] Double tap detected"),t.stopPropagation(),s&&typeof s=="function")s(t,e);else if(t.target.closest("text")){const c=this.viewManager.screenToCanvas(a,i);console.log("[DEBUG] Double tap on edge label. Canvas coordinates:",c),this.handleEdgeLabelDoubleTap(t,c)}else if(t.target.closest(".canvas-element"))if(this.state.mode==="navigate")this.state.getController().switchMode("direct");else{const c=this.domElements.canvas.getBoundingClientRect();this.uiManager.buildContextMenu(this.state.selectedElementId),this.uiManager.showContextMenu(t.clientX-c.left,t.clientY-c.top)}else{const c=this.viewManager.screenToCanvas(a,i);console.log("[DEBUG] Double tap on canvas background. Canvas coordinates:",c),this.handleCanvasDoubleTap(c)}this.lastTapTime[e]=n,this.lastTapPosition={x:a,y:i}}handleCanvasDoubleTap(t){this.gestureData.addMenuTapPosX=t.x,this.gestureData.addMenuTapPosY=t.y;const e=prompt("Quick create markdown content?");e&&this.state.getController().createNewElement(t.x,t.y,"markdown",e)}handleEdgeLabelDoubleTap(t,e){const s=t.target.dataset.id;if(s){this.state.selectElement(s);const n=this.state.findEdgeElementById(s),a=this.state.getController(),i=a.createNewElement(e.x,e.y,"edit-prompt",n.label||"",!1,{target:n.id,property:"label"});a.switchMode("direct"),a.createNewEdge(i,n.id,"Editing...",{meta:!0})}}onWheelCanvas(t){this.viewManager.handleWheelZoom(t)}onPointerDownElement(t){const e=t.target,s=e.closest(".canvas-element");if(!s||(t.stopPropagation(),e.classList.contains("resize-handle")||e.classList.contains("rotate-handle")||e.classList.contains("reorder-handle")||e.classList.contains("scale-handle")||e.classList.contains("type-handle")||e.classList.contains("edge-handle")))return;const a=s.dataset.elId;this.state.selectedElementId!==a&&this.state.selectElement(a),this.gestureData.dragStartPos={x:t.clientX,y:t.clientY};const i=this.state.findElementById(a);i&&(this.gestureData.elementStartPos={x:i.x,y:i.y}),this.state.mode==="direct"&&this.state.setActiveGesture("move-element")}onPointerMoveElement(t){if(this.activeGesture){if(this.activeGesture==="move-element"){t.stopPropagation();const e=this.state.findElementById(this.state.selectedElementId);if(!e||e.static===!0)return;const s=t.clientX-this.gestureData.dragStartPos.x,n=t.clientY-this.gestureData.dragStartPos.y,a=this.gestureData.elementStartPos.x+s/this.state.viewState.scale,i=this.gestureData.elementStartPos.y+n/this.state.viewState.scale;this.state.updateElement(e.id,{x:a,y:i})}else if(this.activeGesture==="resize-element"){t.stopPropagation();const e=this.state.findElementById(this.state.selectedElementId);if(!e||e.static===!0)return;const s=(t.clientX-this.gestureData.dragStartPos.x)/this.state.viewState.scale,n=(t.clientY-this.gestureData.dragStartPos.y)/this.state.viewState.scale,a=Math.max(20,this.gestureData.elementStartSize.width+s),i=Math.max(20,this.gestureData.elementStartSize.height+n);this.state.updateElement(e.id,{width:a,height:i})}else if(this.activeGesture==="scale-element"){t.stopPropagation();const e=this.state.findElementById(this.state.selectedElementId);if(!e)return;const s=.5,n=(t.clientX-this.gestureData.dragStartPos.x)/this.state.viewState.scale*s,a=(t.clientY-this.gestureData.dragStartPos.y)/this.state.viewState.scale*s,i=Math.max((n+a)/2,.2);this.state.updateElement(e.id,{scale:i})}else if(this.activeGesture==="reorder-element"){t.stopPropagation();const e=this.state.findElementById(this.state.selectedElementId);if(!e)return;const s=(t.clientX-this.gestureData.dragStartPos.x)/this.state.viewState.scale,n=(t.clientY-this.gestureData.dragStartPos.y)/this.state.viewState.scale,r=Math.sqrt(s*s+n*n)*.1;this.state.updateElement(e.id,{zIndex:r})}else if(this.activeGesture==="rotate-element"){t.stopPropagation();const e=this.state.findElementById(this.state.selectedElementId);if(!e)return;const s=this.viewManager.screenToCanvas(t.clientX,t.clientY),n=this.viewManager.screenToCanvas(this.gestureData.dragStartPos.x,this.gestureData.dragStartPos.y),a=n.x-this.gestureData.centerForRotation.x,i=n.y-this.gestureData.centerForRotation.y,r=s.x-this.gestureData.centerForRotation.x,o=s.y-this.gestureData.centerForRotation.y,l=Math.atan2(i,a),d=(Math.atan2(o,r)-l)*(180/Math.PI),m=this.gestureData.elementStartRotation+d;this.state.updateElement(e.id,{rotation:m})}else if(this.activeGesture==="create-edge"&&(t.stopPropagation(),this.gestureData.activeEdgeCreation&&this.gestureData.activeEdgeCreation.tempLine)){const e=this.viewManager.screenToCanvas(t.clientX,t.clientY);this.gestureData.activeEdgeCreation.tempLine.setAttribute("x2",e.x),this.gestureData.activeEdgeCreation.tempLine.setAttribute("y2",e.y)}}}onPointerUpElement(t){if(this.activeGesture==="create-edge"){console.log("edge creation in progress exiting element pointer up handler");return}console.log("onPointerUpElement(ev)",t.target),this.onPointerUpDoubleTap(t,"element"),["move-element","resize-element","rotate-element","reorder-element","scale-element"].includes(this.activeGesture)&&(t.stopPropagation(),this.state.saveCanvas()),this.state.clearActiveGesture()}onPointerUpEdgeLayer(t){console.log("[DEBUG] Edges layer pointerup",t.target.dataset.id,t.target);const e=t.target.dataset.id;e&&this.onPointerUpDoubleTap(t,"edge",s=>{console.log("[DEBUG] Double click on edge (label?)",s.target),this.state.selectElement(e);const n=this.state.findEdgeElementById(s.target.dataset.id),a=this.viewManager.screenToCanvas(s.clientX,s.clientY),i=this.state.getController(),r=i.createNewElement(a.x,a.y,"edit-prompt",n.label||"",!1,{target:n.id,property:"label"});i.switchMode("direct"),i.createNewEdge(r,n.id,"Editing...",{meta:!0})})}handleResizeHandlePointerDown(t){if(t.stopPropagation(),this.state.mode!=="direct")return;const e=this.state.findElementById(this.state.selectedElementId);!e||e.static===!0||(this.state.setActiveGesture("resize-element"),this.domElements.container.setPointerCapture(t.pointerId),this.gestureData.dragStartPos={x:t.clientX,y:t.clientY},this.gestureData.elementStartSize={width:e.width,height:e.height},this.gestureData.elementStartPos={x:e.x,y:e.y})}handleScaleHandlePointerDown(t){if(t.stopPropagation(),this.state.mode!=="direct")return;const e=this.state.findElementById(this.state.selectedElementId);e&&(this.state.setActiveGesture("scale-element"),this.domElements.container.setPointerCapture(t.pointerId),this.gestureData.dragStartPos={x:t.clientX,y:t.clientY},this.gestureData.elementStartSize={width:e.width,height:e.height},this.gestureData.elementStartPos={x:e.x,y:e.y})}handleReorderHandlePointerDown(t){if(t.stopPropagation(),this.state.mode!=="direct")return;const e=this.state.findElementById(this.state.selectedElementId);e&&(this.state.setActiveGesture("reorder-element"),this.domElements.container.setPointerCapture(t.pointerId),this.gestureData.dragStartPos={x:t.clientX,y:t.clientY},this.gestureData.elementStartSize={width:e.width,height:e.height},this.gestureData.elementStartPos={x:e.x,y:e.y})}handleTypeHandlePointerDown(t){if(t.stopPropagation(),this.state.mode!=="direct"||!this.state.selectedElementId)return;const e=this.domElements.canvas.getBoundingClientRect();this.uiManager.buildContextMenu(this.state.selectedElementId),this.uiManager.showContextMenu(t.clientX-e.left,t.clientY-e.top)}handleRotateHandlePointerDown(t){if(t.stopPropagation(),this.state.mode!=="direct")return;const e=this.state.findElementById(this.state.selectedElementId);e&&(this.state.setActiveGesture("rotate-element"),this.domElements.container.setPointerCapture(t.pointerId),this.gestureData.elementStartRotation=e.rotation||0,this.gestureData.centerForRotation={x:e.x,y:e.y},this.gestureData.dragStartPos={x:t.clientX,y:t.clientY})}handleEdgeHandlePointerDown(t){if(t.stopPropagation(),this.state.mode!=="direct"||!this.state.selectedElementId)return;console.log("starting edge creation..."),this.state.setActiveGesture("create-edge");const e=this.state.selectedElementId,s=this.state.findElementById(e);if(s){const n=document.createElementNS("http://www.w3.org/2000/svg","line");n.setAttribute("stroke","blue"),n.setAttribute("stroke-width","4"),n.setAttribute("stroke-dasharray","5,5"),n.setAttribute("x1",s.x),n.setAttribute("y1",s.y),n.setAttribute("x2",s.x),n.setAttribute("y2",s.y),this.gestureData.activeEdgeCreation={sourceId:e,tempLine:n},this.domElements.edgesLayer.appendChild(n)}this.edgePointerMoveHandler=this.onEdgePointerMove.bind(this),this.edgePointerUpHandler=this.onEdgePointerUp.bind(this),document.addEventListener("pointermove",this.edgePointerMoveHandler),document.addEventListener("pointerup",this.edgePointerUpHandler)}onEdgePointerMove(t){if(console.log("onEdgePointerMove(ev)"),this.activeGesture!=="create-edge"||!this.gestureData.activeEdgeCreation)return;const e=this.viewManager.screenToCanvas(t.clientX,t.clientY);this.gestureData.activeEdgeCreation.tempLine.setAttribute("x2",e.x),this.gestureData.activeEdgeCreation.tempLine.setAttribute("y2",e.y)}onEdgePointerUp(t){if(console.log("onEdgePointerUp(ev)",this.activeGesture,this.gestureData.activeEdgeCreation),this.activeGesture!=="create-edge"||!this.gestureData.activeEdgeCreation)return;const e=document.elementFromPoint(t.clientX,t.clientY);let s=e&&e.closest(".canvas-element");if(console.log("targetEl",e,s),s){const a=s.dataset.elId;a&&a!==this.gestureData.activeEdgeCreation.sourceId&&this.state.getController().createNewEdge(this.gestureData.activeEdgeCreation.sourceId,a,"")}this.gestureData.activeEdgeCreation.tempLine&&this.gestureData.activeEdgeCreation.tempLine.remove(),this.gestureData.activeEdgeCreation=null,this.state.clearActiveGesture(),document.removeEventListener("pointermove",this.edgePointerMoveHandler),document.removeEventListener("pointerup",this.edgePointerUpHandler),this.state.getController().renderAll(),this.state.saveCanvas()}destroy(){this.gestureData.activeEdgeCreation&&this.gestureData.activeEdgeCreation.tempLine&&this.gestureData.activeEdgeCreation.tempLine.remove(),this.edgePointerMoveHandler&&document.removeEventListener("pointermove",this.edgePointerMoveHandler),this.edgePointerUpHandler&&document.removeEventListener("pointerup",this.edgePointerUpHandler),this.stateSubscriptions.forEach(t=>t()),this.stateSubscriptions=[]}}class b{constructor(t,e,s){this.canvasContainer=t,this.stateManager=e,this.canvasController=s,this.contextMenu=null,this.editModal=null,this.editTextArea=null,this.saveButton=null,this.closeButton=null,this.modeButton=null,this.drillUpButton=null,this.rawDataModal=null,this.rawDataTextArea=null,this.rawDataSaveButton=null,this.rawDataCloseButton=null,this.editingElementId=null,this._createUIElements(),this._createRawDataModal(),this._bindUIEvents(),this.stateSubscriptions=[this.stateManager.subscribe("controller-changed",n=>this.updateDrillUpButtonVisibility(n))],this.updateDrillUpButtonVisibility(this.canvasController),this.updateModeButton(this.stateManager.getState().mode)}_createUIElements(){var t;this.contextMenu=document.createElement("div"),this.contextMenu.id="contextMenu",this.contextMenu.className="context-menu",this.contextMenu.style.position="absolute",this.contextMenu.style.display="none",this.contextMenu.style.zIndex="1000",document.body.appendChild(this.contextMenu),this.editModal=document.getElementById("editModal"),this.editModal||(console.warn("Edit modal element not found, creating dynamically."),this.editModal=document.createElement("div"),this.editModal.id="editModal",this.editModal.className="modal",this.editModal.style.display="none",this.editModal.innerHTML=`
                 <div class="modal-content">
                     <span class="close-button edit-close">&times;</span>
                     <h2>Edit Element</h2>
                     <textarea id="editTextArea" rows="10" style="width: 95%;"></textarea>
                     <button id="saveButton">Save</button>
                 </div>`,document.body.appendChild(this.editModal)),this.editTextArea=document.getElementById("editTextArea"),this.saveButton=document.getElementById("saveButton"),this.closeButton=(t=this.editModal)==null?void 0:t.querySelector(".edit-close"),this.modeButton=document.getElementById("modeButton"),this.modeButton||console.warn("Mode button element not found."),this.drillUpButton=document.getElementById("drillUpButton"),this.drillUpButton?this.drillUpButton.style.display="none":console.warn("Drill up button element not found.")}_createRawDataModal(){this.rawDataModal=document.createElement("div"),this.rawDataModal.id="rawDataModal",this.rawDataModal.className="modal",this.rawDataModal.style.display="none";const t=`
             <div class="modal-content">
                 <span class="close-button raw-data-close">&times;</span>
                 <h2>Edit Raw Element Data</h2>
                 <textarea id="rawDataTextArea" rows="15" style="width: 95%; font-family: monospace;"></textarea>
                 <button id="rawDataSaveButton">Save</button>
             </div>
         `;this.rawDataModal.innerHTML=t,document.body.appendChild(this.rawDataModal),this.rawDataTextArea=this.rawDataModal.querySelector("#rawDataTextArea"),this.rawDataSaveButton=this.rawDataModal.querySelector("#rawDataSaveButton"),this.rawDataCloseButton=this.rawDataModal.querySelector(".raw-data-close")}_bindUIEvents(){this.closeButton&&(this.closeButton.onclick=()=>this.hideEditModal()),this.saveButton&&(this.saveButton.onclick=()=>this._handleEditSave()),this.rawDataCloseButton&&(this.rawDataCloseButton.onclick=()=>this.hideRawDataModal()),this.rawDataSaveButton&&(this.rawDataSaveButton.onclick=()=>this._handleRawDataSave()),document.addEventListener("click",t=>{this.contextMenu&&!this.contextMenu.contains(t.target)&&this.hideContextMenu()}),window.addEventListener("click",t=>{this.editModal&&t.target===this.editModal&&this.hideEditModal(),this.rawDataModal&&t.target===this.rawDataModal&&this.hideRawDataModal()}),this.modeButton&&(this.modeButton.onclick=()=>{const e=this.stateManager.getState().mode==="direct"?"navigate":"direct";this.stateManager.setMode(e),this.updateModeButton(e)}),this.drillUpButton&&(this.drillUpButton.onclick=()=>{this.canvasController&&this.canvasController.parentController&&this.canvasController.drillUp()})}updateModeButton(t){this.modeButton&&(this.modeButton.textContent=t==="direct"?"Mode: Direct Edit":"Mode: Navigate")}updateDrillUpButtonVisibility(t){if(this.drillUpButton){const e=t||this.canvasController;this.drillUpButton.style.display=e&&e.parentController?"block":"none"}}showContextMenu(t,e,s=null){if(this.contextMenu.innerHTML="",s){const n=this.stateManager.getElement(s),a=document.createElement("div");a.className="context-menu-item",a.textContent="Edit Content",a.onclick=o=>{o.stopPropagation(),this.showEditModal(s),this.hideContextMenu()},this.contextMenu.appendChild(a);const i=document.createElement("div");i.className="context-menu-item",i.textContent="View/Edit Raw Data",i.onclick=o=>{o.stopPropagation(),this.showRawDataModal(s),this.hideContextMenu()},this.contextMenu.appendChild(i);const r=document.createElement("div");if(r.className="context-menu-item",r.textContent="Delete Element",r.onclick=o=>{o.stopPropagation(),confirm(`Are you sure you want to delete element ${s}?`)&&this.stateManager.removeElement(s),this.hideContextMenu()},this.contextMenu.appendChild(r),n&&n.type==="canvas-container"){const o=document.createElement("div");o.className="context-menu-item",o.textContent="Drill In",o.onclick=l=>{l.stopPropagation(),this.canvasController.drillIntoCanvas(s),this.hideContextMenu()},this.contextMenu.appendChild(o)}}this.contextMenu.style.left=`${t}px`,this.contextMenu.style.top=`${e}px`,this.contextMenu.style.display="block"}hideContextMenu(){this.contextMenu&&(this.contextMenu.style.display="none")}showEditModal(t){if(!this.editModal||!this.editTextArea){console.error("Edit modal elements not initialized.");return}this.editingElementId=t;const e=this.stateManager.getElement(t);e?(this.editTextArea.value=e.content||"",this.editModal.style.display="block"):console.error("Element not found for editing:",t)}hideEditModal(){this.editModal&&(this.editingElementId=null,this.editModal.style.display="none")}_handleEditSave(){if(!this.editingElementId||!this.editTextArea)return;const t=this.stateManager.getElement(this.editingElementId);if(!t){console.error("Element to save not found:",this.editingElementId),this.hideEditModal();return}const e={content:this.editTextArea.value};this.stateManager.updateElement(this.editingElementId,{...t,...e}),this.hideEditModal()}showRawDataModal(t){if(!this.rawDataModal||!this.rawDataTextArea){console.error("Raw data modal elements not initialized.");return}this.editingElementId=t;const e=this.stateManager.getElement(this.editingElementId);if(!e){console.error("Element not found for raw edit:",this.editingElementId);return}try{this.rawDataTextArea.value=JSON.stringify(e,null,2)}catch(s){console.error("Error stringifying element data:",s),this.rawDataTextArea.value="Error displaying element data."}this.rawDataModal.style.display="block"}hideRawDataModal(){this.rawDataModal&&(this.editingElementId=null,this.rawDataModal.style.display="none")}_handleRawDataSave(){if(!(!this.editingElementId||!this.rawDataTextArea))try{const t=JSON.parse(this.rawDataTextArea.value);if(!t||typeof t!="object"||!t.id||t.id!==this.editingElementId){alert('Invalid data structure or ID mismatch. Ensure "id" property exists and matches the element being edited.');return}this.stateManager.updateElement(this.editingElementId,t),this.hideRawDataModal()}catch(t){console.error("Error parsing or saving raw data:",t),alert(`Error saving data: Invalid JSON format.
${t.message}`)}}destroy(){this.contextMenu&&this.contextMenu.parentNode&&(this.contextMenu.parentNode.removeChild(this.contextMenu),this.contextMenu=null),this.rawDataModal&&this.rawDataModal.parentNode&&(this.rawDataModal.parentNode.removeChild(this.rawDataModal),this.rawDataModal=null),this.stateSubscriptions.forEach(t=>t()),this.stateSubscriptions=[],console.log("UIManager destroyed")}}class p{constructor(t,e=null){this.parentController=e,this.childControllers=new Map,this.canvasState=t}initialize(){var e;this.domElements=this.initializeDomElements(),this.stateManager=new w(this.canvasState,(e=this.parentController)==null?void 0:e.stateManager),this.stateManager.setController(this),this.viewManager=new C(this.stateManager,this.domElements);const t={viewManager:this.viewManager};this.elementManager=new M(this.stateManager,this.domElements,t),t.elementManager=this.elementManager,this.edgeManager=new S(this.stateManager,this.domElements,t),t.edgeManager=this.edgeManager,this.uiManager=new b(this.stateManager,this.domElements,t),t.uiManager=this.uiManager,this.eventManager=new x(this.stateManager,this.domElements,t),this.setupStateSubscriptions(),this.init()}initializeDomElements(){return{canvas:document.getElementById("canvas"),container:document.getElementById("canvas-container"),staticContainer:document.getElementById("static-container"),contextMenu:document.getElementById("context-menu"),modeBtn:document.getElementById("mode"),editModal:document.getElementById("edit-modal"),drillUpBtn:document.getElementById("drillUp"),edgesLayer:document.getElementById("edges-layer"),editorContentContainer:document.getElementById("editor-content"),editorSrcContainer:document.getElementById("editor-src"),modalCancelBtn:document.getElementById("modal-cancel"),modalSaveBtn:document.getElementById("modal-save"),modalGenerateBtn:document.getElementById("modal-generate"),modalVersionsPrevBtn:document.getElementById("versions-prev"),modalVersionsNextBtn:document.getElementById("versions-next"),modalVersionsInfo:document.getElementById("versions-info"),modalError:document.getElementById("modal-error")}}setupStateSubscriptions(){this.stateSubscriptions=[this.stateManager.subscribe("drill-in-requested",t=>{this.drillIntoChildCanvas(t)})]}init(){this.parentController?(this.domElements.drillUpBtn.style.display="block",this.domElements.drillUpBtn.onclick=()=>this.drillUp()):this.domElements.drillUpBtn.style.display="none",this.domElements.modeBtn.onclick=t=>{t.stopPropagation();const e=this.stateManager.mode==="direct"?"navigate":"direct";this.switchMode(e)},this.switchMode("navigate"),this.viewManager.updateCanvasTransform(),this.eventManager.setupEventListeners(),this.renderAll()}renderAll(){this.elementManager.renderElements(),this.edgeManager.renderEdges()}switchMode(t){this.stateManager.mode=t,this.domElements.canvas.setAttribute("mode",t),this.domElements.modeBtn.innerHTML=`<i class="fa-solid fa-${t==="direct"?"hand":"arrows-alt"}"></i> ${t}`}detach(){this.domElements.canvas.style.display="none"}drillIntoChildCanvas(t){t.parentElementId=t.sourceElementId;const e=new p(t,this);u.register(t.canvasId,e),this.childControllers.set(t.canvasId,e),this.clearCanvasElements(),this.detach(),e.initialize(),u.setActive(e);const s=this.findElementById(t.parentElementId);s&&e.viewManager.setInitialTransform({x:s.x,y:s.y,scale:this.viewManager.viewState.scale}),window.history.pushState({},"","?canvas="+t.canvasId)}clearCanvasElements(){for(;this.domElements.container.firstChild;)this.domElements.container.removeChild(this.domElements.container.firstChild);this.stateManager.elementNodesMap={}}drillUp(){this.parentController&&(this.clearCanvasElements(),this.detach(),u.setActive(this.parentController),this.parentController.reattach(),window.history.pushState({},"","?canvas="+this.parentController.stateManager.canvasState.canvasId))}reattach(){this.domElements.canvas.style.display="block",this.elementManager.renderElements(),this.edgeManager.renderEdges(),this.viewManager.updateCanvasTransform()}hasChildCanvas(t){return this.childControllers.has(t)}drillUp(){this.parentController&&(this.detach(),u.setActive(this.parentController),this.parentController.reattach(),window.history.pushState({},"","?canvas="+this.parentController.stateManager.canvasState.canvasId))}createNewElement(t,e,s="markdown",n="",a=!1,i={}){return this.elementManager.createNewElement(t,e,s,n,a,i)}createNewEdge(t,e,s,n={},a={}){return this.edgeManager.createNewEdge(t,e,s,n,a)}saveCanvas(){this.stateManager.saveCanvas()}selectElement(t){this.stateManager.selectElement(t)}findElementById(t){return this.stateManager.findElementById(t)}findEdgeElementById(t){return this.stateManager.findEdgeElementById(t)}screenToCanvas(t,e){return this.viewManager.screenToCanvas(t,e)}openEditModal(t){this.uiManager.openEditModal(t)}showContextMenu(t,e,s){this.uiManager.showContextMenu(t,e,s)}hideContextMenu(){this.uiManager.hideContextMenu()}async generateContent(t,e){return this.stateManager.generateContent(t,e)}regenerateImage(t){this.stateManager.regenerateImage(t)}destroy(){this.stateSubscriptions.forEach(t=>t()),this.childControllers.forEach(t=>t.destroy()),this.childControllers.clear(),this.eventManager.destroy(),this.uiManager.destroy(),this.edgeManager.destroy(),this.elementManager.destroy(),this.viewManager.destroy(),u.controllers.delete(this.stateManager.canvasState.canvasId)}}class D{constructor(){this.activeController=null,this.controllers=new Map}setActive(t){this.activeController=t,window.activeCanvasController=t}getActive(){return this.activeController}register(t,e){this.controllers.set(t,e)}get(t){return this.controllers.get(t)}}const u=new D,I=async()=>{const h="PARC.LAND/BKPK_TOKEN";let s=new URLSearchParams(window.location.search).get("token")||localStorage.getItem(h);return s||(localStorage.setItem(h,"TBC"),s="TBC"),s};async function P(){const h=new URLSearchParams(window.location.search),t=h.get("canvas")||"canvas-002";h.get("token");let e={canvasId:t,elements:[],edges:[],versionHistory:[]};e=await y(e);const s=new p(e);u.register(e.canvasId,s),u.setActive(s),s.initialize(),window.addEventListener("resize",()=>{const n=u.getActive();n&&n.viewManager.handleResize()}),window.addEventListener("popstate",n=>{const i=new URLSearchParams(window.location.search).get("canvas");if(i){const r=u.get(i);if(r){const o=u.getActive();o&&o.detach(),r.reattach(),u.setActive(r)}else B(i).then(o=>{const l=new p(o);u.register(i,l),u.setActive(l),l.initialize()})}})}async function y(h){const t=localStorage.getItem("myCanvasData_"+h.canvasId),e=await I();try{const n=await fetch(`https://c15r-parcland_backpack.web.val.run/websim/${h.canvasId}`,{headers:{Authorization:`Bearer ${e}`}});return n.ok?await n.json():(console.warn("Failed to load from API, fallback local"),t?JSON.parse(t):h)}catch(s){return console.error("Error loading from API",s),t?JSON.parse(t):h}}async function B(h){return await y({canvasId:h,elements:[],edges:[],versionHistory:[]})}document.addEventListener("DOMContentLoaded",P);
