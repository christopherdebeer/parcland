html,
body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    height: 100%;
    user-select: none;
    touch-action: none;
    font-family: sans-serif;
    background-color: white;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    --highlight: #00aaff;
}

#canvas {
    position: relative;
    width: 100%;
    height: 100%;
    background: white;
    cursor: grab;
    user-select: none;
    touch-action: none;
}

#canvas.direct {
    cursor: crosshair;
}

/* The main container for elements – note that we apply transform to it */
#canvas-container {
    position: absolute;
    transform-origin: 0 0;
    overflow: visible;
    --zoom: 1;
    --zoomRem: calc(1rem / var(--zoom));
}

#static-container {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    pointer-events: none;
}

#drillUp {
    display: none;
    position: fixed;
    z-index: 3;
    top: 1em;
    left: 1em;
    padding: 0.6em 1em;
    font-size: 1em;
    cursor: pointer;
}

#mode {
    position: fixed;
    z-index: 2;
    top: 0;
    left: 0;
    border: 0 none;
    padding: 0.3em;
    opacity: 0.5;
    cursor: pointer;
}

.canvas-element {
    --scale: 1;
    --blend-mode: normal;
    --width: 10px;
    --height: 10px;
    --padding: calc(0.5rem / var(--zoom));
    padding: var(--padding);
    font-size: calc(var(--scale) * 1em);
    position: absolute;
    box-sizing: content-box;
    background-color: transparent;
    touch-action: none;
    user-select: none;
    overflow: visible;
    cursor: default;
    z-index: var(--zindex);
    mix-blend-mode: var(--blend-mode);
    pointer-events: all;
}

#canvas[mode="direct"] .canvas-element {
    cursor: move;
}

#canvas[mode="navigate"] .canvas-element .element-handle {
    display: none;
}

.canvas-element>.content {
    width: var(--width);
    border: 1px solid transparent;
    border-width: calc(1px / var(--scale) / var(--zoom));
    box-sizing: border-box;
    /* :( not right yet) */
    /* padding: var(--padding); */
}

/* images and html still get exactly the canvas’s width & height */
.canvas-element[type="img"]>.content,
.canvas-element[type="html"]>.content {
    height: var(--height);
    overflow: hidden;
}

.canvas-element>.content>*:last-child {
    margin-bottom: 0;
}

.canvas-element>.content>*:first-child {
    margin-top: 0;
}

.canvas-element[type="markdown"]>.content>*:first-child {
    margin-top: 0;
}

.canvas-element[type="text"]>.content,
.canvas-element[type="markdown"]>.content {
    line-height: 1.2;
    font-family: monospace;
    margin: 0;
    height: auto;
    overflow: visible;
}

#canvas[mode="navigate"] .canvas-element>.content {
    pointer-events: all;
}

.canvas-element[type="edit-prompt"]>.content {
    z-index: 999;
    border-color: grey;
    box-sizing: border-box;
    overflow: auto;
    background-color: white;
}

#canvas .canvas-element[type="img"]>.content {
    pointer-events: none;
}

.canvas-element.selected {
    z-index: 99;
}

.canvas-element.selected>.content {
    border-color: var(--highlight);
}

.canvas-element[type="edit-prompt"]>.content .CodeMirror {
    height: 100%;
    width: 100%;
}

.canvas-element .actions {
    display: flex;
    gap: 0.3em;
    margin-top: 0.5em;
    flex-wrap: wrap;
}

.canvas-element:not(.selected) .actions {
    display: none;
}

.canvas-element .actions button {
    font-size: var(--zoomRem);
}

.element-handle {
    padding: 1em;
    position: absolute;
    font-size: calc(0.5rem / var(--zoom));
}

.element-handle i {
    border-radius: 50%;
    width: 1em;
    height: 1em;
    box-sizing: border-box;
    display: flex;
    color: white;
    align-items: center;
    justify-content: center;
    mix-blend-mode: normal;

    font-size: 1em;
    box-sizing: content-box;
    padding: 0.4em;
}

.resize-handle {
    right: -1.5em;
    bottom: -1.5em;
}

.resize-handle i {
    background: #00aaff;
    cursor: nesw-resize;
}

.scale-handle {
    top: -1.5em;
    right: -1.5em;
}

.scale-handle i {
    background: #4ad36a;
    cursor: nwse-resize;
}

.rotate-handle {
    top: -2em;
    left: 50%;
    transform: translateX(-50%);
}

.rotate-handle i {
    background: #ffa500;
    cursor: alias;
}

.reorder-handle {
    left: -1.5em;
    bottom: -1.5em;
}

.reorder-handle i {
    background: #e17c7c;
    cursor: row-resize;
}

.type-handle {
    top: -1.5em;
    left: -1.5em;
}

.type-handle i {
    background: transparent;
    color: #ff4444;
    cursor: text;
}

.edge-handle {
    bottom: -2em;
    left: 66%;
    transform: translateX(-50%);
}

.edge-handle i {
    background: #555;
    cursor: crosshair;
}

.create-handle {
    bottom: -2em;
    left: 33%;
    transform: translateX(-50%);
}

.create-handle i {
    background: #555;
    cursor: crosshair;
}

#context-menu {
    position: absolute;
    background: #fff;
    border: 1px solid #ccc;
    display: none;
    flex-direction: column;
    min-width: 120px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 9999;
    font-family: sans-serif;
    touch-action: none;
    user-select: text;
}

#context-menu button {
    background: none;
    border: none;
    text-align: left;
    padding: 8px 10px;
    cursor: pointer;
    width: 100%;
}

#context-menu button:hover {
    background: #eee;
}

#context-menu .btn-container {
    display: flex;
    border-bottom: 1px solid #f5f5f5;
    flex-wrap: wrap;
    width: 100%;
}

#context-menu .btn-container button {
    width: auto;
}

#context-menu button i {
    margin-right: 8px;
    width: 16px;
}

#context-menu button.selected {
    background-color: darkgrey;
    color: white;
}

#context-menu select {
    padding: 0.3em;
    border: 0 none;
    width: 100%;
    outline: none;
}

#context-menu .id-label {
    font-size: 0.5rem;
    color: grey;
    padding: 0.3rem;
}

.modal {
    display: none;
    position: fixed;
    z-index: 10000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.7);
}

.modal-content {
    background-color: #fefefe;
    margin: 5% auto;
    padding: 1em;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
}

.modal-tabs {
    display: flex;
    border-bottom: 1px solid #ccc;
    margin-bottom: 0.5em;
}

.modal-tabs button {
    flex: 1;
    padding: 0.5em;
    cursor: pointer;
    background: #eee;
    border: none;
    font-size: 1em;
}

.modal-tabs button.active {
    background: #fff;
    border-bottom: 2px solid #00aaff;
}

.modal-editor {
    overflow: auto;
    position: relative;
    flex-grow: 1;
    display: flex;
}

/* Use div containers for CodeMirror editors rather than textareas */
#editor-content,
#editor-src {
    height: auto;
    border: 1px solid #ccc;
    width: 100%;
}

#editor-src {
    display: none;
}

.modal-buttons {
    padding: 1em;
    text-align: right;
}

.modal-buttons button {
    padding: 0.5em 1em;
    margin-left: 0.5em;
    cursor: pointer;
}

.versions-nav {
    display: flex;
    align-items: center;
    gap: 1em;
    justify-content: center;
    padding: 0.5em;
}

.versions-nav button {
    min-width: 2.5em;
    padding: 0.2em 0.5em;
}

#modal-error {
    color: red;
    font-weight: 500;
    padding: 0.5em;
}

#modal-error:emtpy {
    padding: 0;
}

@media only screen and (max-width: 600px) {
    .modal-content {
        max-height: 100vh;
        overflow: hidden;
        display: flex;
        margin: 0;
        padding: 0;
        width: 100%;
        flex-direction: column;
        justify-content: center;
        align-content: center;
        align-items: stretch;
        height: 100%;
    }

    .CodeMirror {
        height: 100%;
    }
}

#edges-layer {
    position: absolute;
    transform-origin: 0 0;
    overflow: visible;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 5;
}

#edges-layer text {
    pointer-events: all;
    opacity: 1;
    cursor: text;
}

.scroller {
    background:
        /* Shadow covers */
        linear-gradient(white 30%, rgba(255, 255, 255, 0)), linear-gradient(rgba(255, 255, 255, 0), white 70%) 0 100%,
        /* Shadows */
        radial-gradient(50% 0, farthest-side, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)), radial-gradient(50% 100%, farthest-side, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 0 100%;
    background:
        /* Shadow covers */
        linear-gradient(white 30%, rgba(255, 255, 255, 0)), linear-gradient(rgba(255, 255, 255, 0), white 70%) 0 100%,
        /* Shadows */
        radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)), radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 0 100%;
    background-repeat: no-repeat;
    background-color: white;
    background-size: 100% 40px, 100% 40px, 100% 14px, 100% 14px;
    /* Opera doesn't support this in the shorthand */
    background-attachment: local, local, scroll, scroll;
}

#lasso-box {
    --zoom: var(--zoom, 1);
    transform: scale(calc(1 / var(--zoom)));
    transform-origin: top left;
}

/* ─────── Command Palette (revised) ────────────────────────────────────── */
#cmd-palette {
    position: fixed;
    left: 50%;
    bottom: 1rem;
    transform: translateX(-50%);
    width: min(480px, 90vw);
    z-index: 999;
    font-family: sans-serif;
    pointer-events: auto;
    width: 100%;
    bottom: 0;
    padding: 1em 0.6em;
    box-sizing: border-box;
    box-shadow: 0px 0px 1em 0px #00000036;
    border-radius: 0.5em 0.5em 0 0;
    padding-top: 1.5em;
}

div#cmd-palette:before {
    content: "";
    position: absolute;
    width: 3em;
    height: 0.3em;
    background-color: grey;
    top: 0.5em;
    left: 50%;
    transform: translateX(-50%);
    border-radius: 0.3em;
    opacity: 0.5;
}

/* input bar ───────────────────────────────────────────────────────────── */

#cmd-palette .cmd-wrapper {
    position: relative;
}
#cmd-palette input {
    width: 100%;
    box-sizing: border-box;
    padding: 0.65em 1em;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 8px;
    outline: none;
    background: #fff;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .15);
    padding-right: 2.3em;
}

#cmd-palette input:focus {
    border-color: #2196F3;
    box-shadow: 0 0 0 2px rgba(33, 150, 243, .25);
}

#cmd-clear {
    position: absolute;
    right: .6em;
    top: 50%;
    transform: translateY(-50%);
    border: none;
    background: transparent;
    font-size: 1.2em;
    line-height: 1;
    cursor: pointer;
    opacity: .4;
}

#cmd-clear:hover {
    opacity: .8;
}

#cmd-palette.empty:not(.awaiting) #cmd-clear {
    display: none;
}

#cmd-palette.awaiting input {
    border-color: #ff9800;
}

/* suggestions pop upward ──────────────────────────────────────────────── */
#cmd-palette .suggestions {
    /* position: absolute;
    bottom: calc(100% + .5rem); */
    /* list grows above the bar */
    left: 0;
    width: 100%;
    margin: 0;
    padding: 0;
    list-style: none;
    max-height: 50vh;
    overflow-y: auto;
    display: none;
    /* toggled by JS */
}

#cmd-palette.focused:not(.empty) .suggestions {
    display: block;
}

/* suggestion row ──────────────────────────────────────────────────────── */
#cmd-palette .suggestion {
    display: flex;
    align-items: center;
    gap: .5em;
    padding: 0.4em 0.8em;
    font-size: 0.8rem;
    background: #fafafa;
    border: 1px solid #eee;
    border-bottom: none;
    cursor: pointer;
}

#cmd-palette .suggestion:last-child {
    border-bottom: 1px solid #eee;
}

#cmd-palette .suggestion:hover,
#cmd-palette .suggestion.active {
    background: #2196F3;
    color: #fff;
}

/* icon column for element suggestions */
#cmd-palette .s-icon {
    flex: 0 0 1.2em;
    text-align: center;
}

#cmd-palette .s-icon i {
    width: 1em;
}

/* breadcrumb crumbs */
#cmd-palette .crumb {
    opacity: .6;
    white-space: nowrap;
}

#cmd-palette .suggestion.active .crumb,
#cmd-palette .suggestion:hover .crumb {
    opacity: 1;
}

#cmd-palette .crumb:last-child {
    font-weight: 600;
    opacity: 1;
}

/* ─── multi-selection bounding box ───────────────────────────── */
#group-box {
    position: absolute;
    z-index: 98;
    pointer-events: none;
    /* box itself should never intercept clicks */
}

#group-box .box {
    position: absolute;
    inset: 0;
    border: 1px solid var(--highlight);
    border-width: calc(1px / var(--zoom));
    background: rgba(0, 170, 255, .05);
}

/* handles recycle existing classes so FSM logic stays unchanged */
#canvas[mode="navigate"] #group-box .element-handle {
    display: none;
}

#group-box .resize-handle {
    right: -1.5em;
    bottom: -1.5em;
}

#group-box .rotate-handle {
    top: -2em;
    left: 50%;
    transform: translateX(-50%);
}

#group-box .scale-handle {
    top: -1.5em;
    right: -1.5em;
}